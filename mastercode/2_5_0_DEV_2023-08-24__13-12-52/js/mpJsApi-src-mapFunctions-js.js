(window.webpackJsonp=window.webpackJsonp||[]).push([[234],{1833:function(e,t,r){"use strict";r.r(t),function(o){r.d(t,"MapFuncs",function(){return c});var c={getOlMap:function(){return o.request("Map","getMap")},getLayerById:function(t){return o.request("Map","getLayers").getArray().find(function(e){return e.get("id")===t})},getMapViewerState:function(){var e=c.getOlMap(),t=o.request("ModelList","getCollection"),r=t.where({type:"layer"}),n=t.where({type:"folder"}),a=[].concat(r,n),i={};return i.extent=e.getView().calculateExtent(),i.layers=a.map(function(e){var t=e.toJSON();return{id:t.id,transparency:t.transparency,isSelected:t.isSelected,selectionIDX:t.selectionIDX}}),i},applyMapViewerState:function(e){e.extent&&o.trigger("Map","zoomToExtent",e.extent),e.layers&&(e.layers.forEach(function(e){var t=o.request("ModelList","getModelByAttributes",{id:e.id});t&&t.set(e)}),o.trigger("Util","refreshTree"))}};t.default=c}.call(this,r(4))}}]);