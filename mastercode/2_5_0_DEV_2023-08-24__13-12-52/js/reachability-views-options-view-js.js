(window.webpackJsonp=window.webpackJsonp||[]).push([[272,245],{1798:function(i,n,e){"use strict";e.r(n),e.d(n,"SpeedProfile",function(){return t}),e.d(n,"AvoidFeatureOption",function(){return a}),e.d(n,"Optimization",function(){return r}),e.d(n,"DownloadFormat",function(){return o}),e.d(n,"ResultError",function(){return s});var t=Object.freeze({CAR:{id:"CAR",i18n:"car",icon:"fa-car",orsKey:"driving-car"},HGV:{id:"HGV",i18n:"hgv",icon:"fa-truck",orsKey:"driving-hgv"},FOOT:{id:"FOOT",i18n:"foot",icon:"fa-walking",orsKey:"foot-walking"},CYCLING:{id:"CYCLING",i18n:"cycling",icon:"fa-bicycle",orsKey:"cycling-regular"},WHEELCHAIR:{id:"WHEELCHAIR",i18n:"wheelchair",icon:"fa-wheelchair",orsKey:"wheelchair"}}),a=Object.freeze({HIGHWAYS:{id:"HIGHWAYS",i18n:"highways",availableProfiles:["CAR","HGV"],orsKey:"highways"},TOLLWAYS:{id:"TOLLWAYS",i18n:"tollways",availableProfiles:["CAR","HGV"],orsKey:"tollways"},FERRIES:{id:"FERRIES",i18n:"ferries",availableProfiles:["CAR","HGV","CYCLING","FOOT","WHEELCHAIR"],orsKey:"ferries"},STEPS:{id:"STEPS",i18n:"steps",availableProfiles:["CYCLING","FOOT","WHEELCHAIR"],orsKey:"steps"}}),r=Object.freeze({TIME:{id:"TIME",i18n:"time",orsKey:"time",multiplicator:60,unit:"min"},DISTANCE:{id:"DISTANCE",i18n:"distance",orsKey:"distance",multiplicator:1e3,unit:"km"}}),o=Object.freeze({GEOJSON:"GEOJSON",KML:"KML"}),s=Object.freeze({NO_ISOCHRONES_FOUND:{i18n:"noIsochronesFound"},AVOID_AREA_TOO_LARGE:{i18n:"avoidAreasTooLarge"},FETCHING_FAILED:{i18n:"fetchingFailed"}})},1952:function(i,l,d){"use strict";d.r(l),function(i,r,o,t){var n=d(2102),e=d.n(n),s=d(1798);var a=i.View.extend({model:null,template:r.template(e.a),events:{"change .avoid-feature-option":"onAvoidFeatureChanged","change .optimization-option":"onOptimizationChanged","input #slider1":"onSlider1Input","input #slider2":"onSlider2Input","change #slider1":"onSlider1Changed","change #slider2":"onIntervalChanged"},initialize:function(){this.listenTo(this.model,{"change:speedProfile":this.render,"change:time":this.render,"change:distance":this.render,"change:interval change:maxInterval change:minInterval":this.render,"change:optimization":this.render})},render:function(){var i,n,e,t=this.model.getOptimization()===s.Optimization.TIME.id,a=r.extend(this.model.toJSON(),(i={i18n:o.t("additional:reachability",{returnObjects:!0}),availableOptimizations:Object.values(s.Optimization),availableAvoidFeatureOptions:this.model.getAvailableAvoidFeatureOptions(),Optimization:s.Optimization,sliderMin:t?this.model.getMinTime():this.model.getMinDistance(),sliderMax:t?this.model.getMaxTime():this.model.getMaxDistance(),sliderCurrent:t?this.model.getTime():this.model.getDistance()},n="Optimization",e=s.Optimization,n in i?Object.defineProperty(i,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):i[n]=e,i));return this.$el.html(this.template(a)),this.delegateEvents(),this},onSlider1Input:function(i){var n=t(i.target);this.$("#slider1Value").html(n.val())},onSlider2Input:function(i){var n=t(i.target);this.$("#slider2Value").html(n.val())},onSlider1Changed:function(i){var n=this.model.getOptimization()===s.Optimization.TIME.id,e=t(i.target);n?this.model.setTime(e.val()):this.model.setDistance(e.val()),this.model.findIsochrones()},onIntervalChanged:function(i){var n=t(i.target);this.model.setInterval(n.val()),this.model.findIsochrones()},onOptimizationChanged:function(i){var n=t(i.target);n.is(":checked")&&this.model.setOptimization(n.val())},onAvoidFeatureChanged:function(i){this.model.toggleAvoidFeatureOption(t(i.target).val())}});l.default=a}.call(this,d(5),d(3),d(24),d(10))},2102:function(i,n){i.exports='<div class="optimization">\r\n  <%= i18n.reachabilityBy %>: \r\n  <% _.each(availableOptimizations, (option) => { %>\r\n    <input class="optimization-option" name="optimization" type="radio" id="<%= option.id %>" value="<%= option.id %>" <%= optimization === option.id ? \'checked\' : \'\' %>>\r\n    <label for="<%= option.id %>">\r\n      <%= i18n[option.i18n] %>\r\n    </label>\r\n  <% }) %>\r\n</div>\r\n\r\n\r\n<div class="slider-label">\r\n  <%= Optimization.TIME.id === optimization ? i18n.maxTravelTime : i18n.maxDistance %>\r\n</div>\r\n<div class="slider-ranges">\r\n  <div><%= sliderMin %><span class="unit"><%= Optimization[optimization].unit %></span></div>\r\n  <div class="current"><span id="slider1Value"><%= sliderCurrent %></span><span class="unit"><%= Optimization[optimization].unit %></span></div>\r\n  <div><%= sliderMax %><span class="unit"><%= Optimization[optimization].unit %></span></div>\r\n</div>\r\n<input type="range" min="<%= sliderMin %>" max="<%= sliderMax %>" value="<%= sliderCurrent %>" class="slider" id="slider1">\r\n\r\n<div class="slider-label">\r\n  <%= i18n.interval %>\r\n</div>\r\n<div class="slider-ranges">\r\n  <div><%= minInterval %><span class="unit"><%= Optimization[optimization].unit %></span></div>\r\n  <div class="current"><span id="slider2Value"><%= interval %></span><span class="unit"><%= Optimization[optimization].unit %></span></div>\r\n  <div><%= maxInterval %><span class="unit"><%= Optimization[optimization].unit %></span></div>\r\n</div>\r\n<input type="range" min="<%= minInterval %>" max="<%= maxInterval %>" value="<%= interval %>" class="slider" id="slider2">\r\n\r\n<div class="additional-options">\r\n  <b><%= i18n.avoidRoutes %></b>\r\n  <div class="avoid-feature-option-container">\r\n    <% _.each(availableAvoidFeatureOptions, function(avoidFeatureOption) { %>\r\n      <div>\r\n        <input type="checkbox" class="avoid-feature-option" id="<%= avoidFeatureOption.id %>" value="<%= avoidFeatureOption.id %>" <%=  avoidFeatureOptions.includes(avoidFeatureOption.id) ? \'checked\' : \'\' %>>\r\n        <label for="<%= avoidFeatureOption.id %>"><%= i18n[avoidFeatureOption.i18n] %></label>\r\n      </div>\r\n    <% }) %>\r\n  </div>\r\n</div>\r\n'}}]);