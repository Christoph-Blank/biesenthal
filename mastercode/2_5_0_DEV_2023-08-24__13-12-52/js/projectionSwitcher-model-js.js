(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{1946:function(t,a,l){"use strict";l.r(a),function(t){var S=l(8),s=l(1),n=l(257),u=l(258),i=l(38),h=l(189),m=l(414),b=l(170),v=l(337),C=l(187),j=l(41),c=l(77),y=l(5);function r(t){return function(t){if(Array.isArray(t))return o(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return o(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}var e=t.Model.extend({defaults:{selectedCrs:void 0,allowedCrs:[],parentSelector:"",scales:y.Radio.request("MapView","getScales"),asControl:!0,crsNameMapping:{}},initialize:function(){var t=y.Radio.request("MapView","getProjection"),e=t?t.getCode():void 0;e&&(this.set("selectedCrs",e),this.get("allowedCrs").some(function(t){return t===e})||this.set("allowedCrs",[e].concat(r(this.get("allowedCrs")))));this.get("allowedCrs").forEach(function(e){var t=Config.namedProjections.find(function(t){return t[0]===e});t?(i.default.defs(t[0],t[1]),Object(n.a)(i.default)):Object(S.h)(e)||console.warn("Could not find projection for "+e)})},transformSettingsCenter:function(t,e){var n=y.Radio.request("MapView","getSettingsCenter"),i=c.a.startCenter,r=n||i;if(r){var o=Object(S.n)(r,t,e);y.Radio.trigger("MapView","setSettingsCenter",o)}},transformSettingsExtent:function(t,e){var n,i=y.Radio.request("MapView","getSettingsExtent"),r=c.a.extent,o=i||r;if(o){var a=Object(S.j)(t,e);n=Object(s.a)(o,a),y.Radio.trigger("MapView","setSettingsExtent",n)}return n},transformSettingsResolution:function(t,e){var n,i=y.Radio.request("MapView","getSettingsResolution"),r=c.a.startResolution,o=i||r;if(o){var a=y.Radio.request("Map","getScaleForResolution",o,t.getUnits());n=y.Radio.request("Map","getResolutionForScale",a,e.getUnits()),y.Radio.trigger("MapView","setSettingsResolution",n)}},updateMapViewOptions:function(n){var t=y.Radio.request("MapView","getRawOptions");t.forEach(function(t,e){t.resolution=n[e]}),y.Radio.trigger("MapView","setOptions",t)},onProjectionChange:function(t){var d=Object(S.h)(t),p=Object(S.h)(this.get("selectedCrs")),R=this.transformSettingsExtent(p,d),e=y.Radio.request("Map","getMap"),n=e.getView(),i=y.Radio.request("MapView","getCenter"),r=Object(S.n)(i,p,d),o=n.getZoom(),w=this.get("scales").map(function(t){return y.Radio.request("Map","getResolutionForScale",t,d.getUnits())},this),a=e.getLayers().getArray(),M=new u.a({resolutions:w,zoom:o,extent:R,center:r,projection:d});a.forEach(function(t){var e=t.getSource(),n=t.getMinResolution(),i=t.getMaxResolution();if(t instanceof h.a){if(e instanceof m.b&&!(e instanceof v.a)){var r=e.getTileGrid(),o=Object(S.n)(r.getOrigin(),p,d),a=new b.a({url:e.getUrls()[0],attributions:e.getAttributions(),gutter:e.getGutter(),params:e.getParams(),tileGrid:new C.a({origin:o,resolutions:w,tileSize:r.getTileSize()})});t.setSource(a)}}else e instanceof j.a&&(e.forEachFeature(function(t){t.getGeometry().transform(p,d)}),t.setExtent(R));if(0<n){var s=y.Radio.request("Map","getScaleForResolution",n,p.getUnits()),u=y.Radio.request("Map","getResolutionForScale",s,d.getUnits()),c=M.constrainResolution(u);t.setMinResolution(c)}if(i<1/0){var l=y.Radio.request("Map","getScaleForResolution",i,p.getUnits()),g=y.Radio.request("Map","getResolutionForScale",l,d.getUnits()),f=M.constrainResolution(g);t.setMaxResolution(f+f/100)}},this),this.transformSettingsCenter(p,d),this.transformSettingsResolution(p,d),this.updateMapViewOptions(w),y.Radio.trigger("MapView","setView",M),this.set("selectedCrs",t)}});a.default=e}.call(this,l(5))}}]);